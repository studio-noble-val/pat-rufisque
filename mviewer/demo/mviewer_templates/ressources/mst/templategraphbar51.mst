<!-- *** TEMPLATE 5.1 / GRAPH DIAGRAMME BAR / BANDEAU DROITE *** --> 

{{#features}}
	<li class="item" style="width: inherit;padding: 0px 10px 0px 0px;">
		<h3 class="title-feature ">{{nom}}</h3>

		<!-- Chart 1-->
	    <div class="Chart">
	        <div id="idChart">
	            <canvas class="chart" id="myChartBar1_{{code_geo}}" data-codegeo="{{code_geo}}" data-mychartBar1-1="{{p_pop0014}}" data-mychartBar1-2="{{p_pop1529}}" data-mychartBar1-3="{{p_pop3044}}" data-mychartBar1-4="{{p_pop4559}}" data-mychartBar1-5="{{p_pop6074}}" data-mychartBar1-6="{{p_pop75p}}" width="120" height="120"></canvas>
	        </div>
	        <div class="textChart">
	            <div class="title-chart">Répartition de la population selon la catégorie d'âge</div>
	            <div class="subtitle-chart"><i>Pour l'entité sélectionnée en 2017</i></div>
	        </div>        
	    </div>
	    <!-- ./Chart 1-->		
      		
	</li>
{{/features}}

<style>

	/*** Définir la couleur de mon template - Insérer le code #HEX de votre couleur */
	:root {
		--mycolor: #1D1B35;
	}

  	/***********************************************/
	/*** Ne pas toucher aux propriétés suivantes ***/

	/* Texte */

	.title-feature {
		color: var(--mycolor);
	    font-family: 'roboto_bold', Arial, Sans-serif;
	    text-transform: uppercase;
	    font-size: 19px;
	    margin-bottom: 7%;
	    line-height: 1.2;
	}
	.subtitle-feature {
		color: var(--mycolor);
		font-family:'roboto_regular', Arial, Sans-serif;
		font-size:18px;
		margin-top:7%;
		line-height:1;
	}

	.text-feature{
		font-family:'roboto_regular', Arial, Sans-serif;
		color:#555;
		font-size:12px;
		margin-top:5%;
	}

	/* Chart */
  .Chart{
		text-align:center; 
    margin:0;
	}

    .textChart {
      font-family:"roboto_regular";
      font-size: 13px;
      color:#777;
      margin-top: 5px;
    }
    .title-chart{
      font-family: "roboto_bold";
    }

	
</style>

<script language="javascript"> 

  ////// PARAMETRAGE DU GRAPHIQUE - JS///////

  /// Récupération du code_geo de l'entité selectionnée 
  var c_geo = [];
        {{#features}}
            c_geo.push('{{code_geo}}');
        {{/features}}

{{#features}}

  /// CHART BAR 1 - Création d'un diagramme bar

  var graph_myChartBar1 = {};
  graph_myChartBar1.getData = function () {
    // Définition du code geo - ID
    var code_geo = $("#myChartBar1_{{code_geo}}").attr("data-codegeo");
    // Définition des variables du graphiques
    var data = {myChartBar1_attr: {labels:["0-14ans","15-29ans","30-44ans","45-59ans","60-74ans","+75ans"], data: {datasets:[[parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-1")),parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-2")),parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-3")),parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-4")),parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-5")),parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-6"))]]}}};
    // Affichage des données dans la console
    console.log(data);
    // Création du graphique avec les paramètres définis
    graph_myChartBar1.drawChart(data);
  };    
  
  // Définition des paramètres du graphique
  graph_myChartBar1.drawChart = function (data) {
  var ctx = document.getElementById("myChartBar1_{{code_geo}}");
  var myChart1 = new Chart(ctx, {
          type: 'bar',
          data: {
              labels: data.myChartBar1_attr.labels,
              datasets: [{                  
                  label: "Personnes",
                  backgroundColor: "rgba(130,202,200,0.9)",
                  borderColor: "rgba(130,202,200,0.9)",
                  borderWidth: 1,
                  borderSkipped:'left',
                  hoverBackgroundColor: "rgba(130,202,200,1)",
                  hoverBorderColor: "rgba(130,202,200,1)",
                  data: data.myChartBar1_attr.data.datasets[0],
              }]
          },
          options: {            
            scales:{
              yAxes:[{
                  ticks:{
                    min:0
                  }
                }]
            },
            responsive: true,
            tooltips: {
              callbacks: {
                  label: function(tooltipItem, data) {
                      return data.datasets[tooltipItem.datasetIndex].label +': ' + parseFloat(tooltipItem.yLabel.toFixed(2)).toLocaleString();
                  }
              }
            }
          }
      });
    };  

    if  (typeof Chart === 'function') {
       graph_myChartBar1.getData();
  } else {
      $.get('https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js', function() {
        graph_myChartBar1.getData();
        
      }); 
  }













{{/features}}
</script>        