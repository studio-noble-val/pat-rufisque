<!-- *** TEMPLATE 7.1 / DIAGRAMME + CHIFFRES CLES 1 / BANDEAU BAS *** --> 

{{#features}}
	<li class="item">
		<h3 class="title-feature ">{{nom}}</h3>
		<!-- Colonne 4 - Chiffres clés -->
		<div class="col-sm-4">
			<!--Chiffre clés 1-->
			<div class="row numberkey">
				<div class="zone-iconnumber col-sm-3">
					<div id="iconnumber1"></div>
				</div>
				<div class="col-sm-8 numText">
					<div class="number-feature">{{p_pop}}</div>
					<div class="titlenumber-feature">Nombre d'habitant.e.s</div>
					<div class="subtitlenumber-feature"><i>Pour l'entité sélectionnée en 2017</i></div>
				</div>
			</div>
			<!--./Chiffre clé 1-->
			<!--Chiffre clés 2-->
			<div class="row numberkey">
				<div class="zone-iconnumber col-sm-3">
					<div id="iconnumber2"></div>
				</div>
				<div class="col-sm-8 numText">
					<div class="number-feature"><span id="pop_densite">#</span></div>
					<div class="titlenumber-feature">Densité de population (hab/km2)</div>
					<div class="subtitlenumber-feature"><i>Pour l'entité sélectionnée en 2017</i></div>
				</div>
			</div>
			<!--./Chiffre clé 2-->
		</div>
		<!-- /.Colonne 4 - Chiffres clés -->
		<!-- Colonne 5 - Graph -->
		<div class="col-sm-5">
			<!-- Chart 1-->
			<div class="row Chart">
				<div id="idChart">
					<canvas class="chart" id="myChartBar1_{{code_geo}}" data-codegeo="{{code_geo}}" data-mychartBar1-1="{{p_pop0014}}" data-mychartBar1-2="{{p_pop1529}}" data-mychartBar1-3="{{p_pop3044}}" data-mychartBar1-4="{{p_pop4559}}" data-mychartBar1-5="{{p_pop6074}}" data-mychartBar1-6="{{p_pop75p}}" width="80" height="32"></canvas>
				</div>
				<div class="textChart">
					<div class="title-chart">Répartition de la population selon la catégorie d'âge</div>
					<div class="subtitle-chart"><i>Pour l'entité sélectionnée en 2017</i></div>
				</div>        
			</div>
			<!-- ./Chart 1-->	
		</div>
		<!-- /.Colonne 5 - Graph -->

		<!-- Ressources -->
		<div class="col-sm-3">
			<div id="btn-ressources">
				<img id="title-btn" src="demo/mviewer_templates/img/download.svg">
				<button class="btn btn-d">
					<span class="button-text"><a href="demo/mviewer_templates/ressources/conception/TemplateConception.Bottom.graphChiffrescles_7.1.pdf" target="_blank"><span class="glyphicon glyphicon-file" aria-hidden="true"></span> Fiche de conception</a></span>
				</button>
				<button class="btn btn-d">
					<span class="button-text"><a href="demo/mviewer_templates/ressources/tutoriel/TemplateTutoriel_7.1.pdf" target="_blank"><span class="glyphicon glyphicon-book" aria-hidden="true"></span> Tutoriel</a></span>
				</button>
				<button class="btn btn-d">
					<span class="button-text"><a href="demo/mviewer_templates/ressources/mst/templatebottomGraphChiffres71.mst" download="templatebottomGraphChiffres71.mst"><span class="glyphicon glyphicon-file" aria-hidden="true"></span> Template</a></span>
				</button>
			</div>
		</div>
		<!-- /.Ressources -->

		
		
	</li>
{{/features}}

<style>
/*** Définir la couleur de mon template - Insérer le code #HEX de votre couleur */
:root {
	--mycolor: #1D1B35;
	--myfont: 'Roboto', sans-serif;
}

/*** Définir les paramètres de mon chiffre clé */

/* Icône - Lien vers l'îcone */
#iconnumber1 {
	-webkit-mask-image: url(demo/mviewer_templates/img/icons/population.svg);
	mask-image: url(demo/mviewer_templates/img/icons/population.svg);
}

#iconnumber2 {
	-webkit-mask-image: url(demo/mviewer_templates/img/icons/land.svg);
	mask-image: url(demo/mviewer_templates/img/icons/land.svg);
}


/* Couleur - code HEX */
.numberkey {
	--mynumbercolor: #82CAC8;
}

/*** Ne pas toucher aux propriétés suivantes ***/

/* Import des fonts*/
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

/* Texte */

.title-feature {
	color: var(--mycolor);
	font-family: var(--myfont);
	font-weight: 700;
	text-transform: uppercase;
	font-size: 19px;
	line-height: 1.2;
}

.subtitle-feature {
	color: var(--mycolor);
	font-family: var(--myfont);
	font-size: 18px;
	margin-top: 7%;
	line-height: 1;
}

.text-feature {
	font-family: var(--myfont);
	color: #555;
	font-size: 12px;
	margin-top: 5%;
}

/* Chiffres clés */

.numberkey {
	margin-top: 10px;
	height: auto;
}

.zone-iconnumber {
	padding: 10px 20px;
}

#iconnumber1 {
	-webkit-mask-repeat: no-repeat;
	mask-repeat: no-repeat;
	height: 60px;
	width: 60px;
	background: var(--mynumbercolor);
}

#iconnumber2 {
	-webkit-mask-repeat: no-repeat;
	mask-repeat: no-repeat;
	height: 60px;
	width: 60px;
	background: var(--mynumbercolor);
}

.numText {
	padding: 0px 10px 0px 0px;
}

.number-feature {
	color: var(--mynumbercolor);
	font-family: var(--myfont);
	font-weight: 700;
	font-size: 25px;
}

.titlenumber-feature {
	color: var(--mynumbercolor);
	font-family: var(--myfont);
	font-weight: 700;
	font-size: 13px;
	line-height: 1;
}

.subtitlenumber-feature {
	font-size: 11px;
	color: #777;
	margin: 5px 0px;
}

/* Chart */

.Chart {
	text-align: center;
	margin: 20px 0px;
}

.textChart {
	font-family: var(--myfont);
	font-size: 13px;
	color: #777;
	margin-top: 5px;
}

.title-chart {
	font-family: var(--myfont);
	font-weight: 600;
}


/* Bouton de téléchargement */

#btn-ressources {
	position: absolute;
}

#title-btn {
	width: 75%;
	margin-left: -7px;
}

.button-text a {
	color: white;
}

.button-text a:hover {
	color: white;
}

.btn-d {
	background-color: #4eacbd;
	font-family: var(--myfont);
	font-size: 12px;
	border-radius: 3px;
	margin: 3px 1px;
}

.btn-d:hover {
	background-color: rgba(78, 172, 189, 0.60);
}	
</style>

<script language="javascript">
{{#features}}    

	///// ARRONDIR ET NB APRES VIRGULE - CHIFFRES CLES 
	// Définition fonctions
	function Arrondir( nomber, nbApVirg ) { 
		return ( parseInt(nomber * Math.pow(10,nbApVirg) + 0.5) ) / Math.pow(10,nbApVirg); 
	} 

	function formatMillier( nombre ) { 
	var nbrArrnd = Arrondir(nombre, 1); 
		return new Intl.NumberFormat().format( nbrArrnd ); 
	}

	// Modification des chiffres
    
     $("#pop_densite").text(formatMillier({{densite}}));

	  ////// PARAMETRAGE DU GRAPHIQUE - JS///////

  /// Récupération du code_geo de l'entité selectionnée 
  var c_geo = [];
        {{#features}}
            c_geo.push('{{code_geo}}');
        {{/features}}

  /// CHART BAR 1 - Création d'un diagramme bar

  var graph_myChartBar1 = {};
  graph_myChartBar1.getData = function () {
    // Définition du code geo - ID
    var code_geo = $("#myChartBar1_{{code_geo}}").attr("data-codegeo");
    // Définition des variables du graphiques
    var data = {myChartBar1_attr: {labels:["0-14 ans","15-29 ans","30-44 ans","45-59 ans","60-74 ans","+75 ans"], data: {datasets:[[parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-1")),parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-2")),parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-3")),parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-4")),parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-5")),parseFloat($("#myChartBar1_{{code_geo}}").attr("data-mychartBar1-6"))]]}}};
    // Affichage des données dans la console
    console.log(data);
    // Création du graphique avec les paramètres définis
    graph_myChartBar1.drawChart(data);
  };    
  
  // Définition des paramètres du graphique
  graph_myChartBar1.drawChart = function (data) {
  var ctx = document.getElementById("myChartBar1_{{code_geo}}");
  var myChart1 = new Chart(ctx, {
          type: 'bar',
          data: {
              labels: data.myChartBar1_attr.labels,
              datasets: [{                  
                  label: "Personnes",
                  backgroundColor: "rgba(130,202,200,0.9)",
                  borderColor: "rgba(130,202,200,0.9)",
                  borderWidth: 1,
                  borderSkipped:'left',
                  hoverBackgroundColor: "rgba(130,202,200,1)",
                  hoverBorderColor: "rgba(130,202,200,1)",
                  data: data.myChartBar1_attr.data.datasets[0],
              }]
          },
          options: {            
            scales:{
              yAxes:[{
                  ticks:{
                    min:0
                  }
                }]
            },
            responsive: true,
            tooltips: {
              callbacks: {
                  label: function(tooltipItem, data) {
                      return data.datasets[tooltipItem.datasetIndex].label +': ' + parseFloat(tooltipItem.yLabel.toFixed(2)).toLocaleString();
                  }
              }
            }
          }
      });
    };  

    if  (typeof Chart === 'function') {
       graph_myChartBar1.getData();
  } else {
      $.get('https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js', function() {
        graph_myChartBar1.getData();
        
      }); 
  }

{{/features}}

</script>