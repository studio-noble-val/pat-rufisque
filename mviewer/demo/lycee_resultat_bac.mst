{{#features}}
	<li id="{{feature_ol_uid}}" class="item" style="padding-bottom:65px;">
		<div class="title-feature" style="padding-top:10px;">{{nom}}</div>
		<h4><select onchange="drawCharts(this.value);">
    			<option>2017</option>
    			<option>2016</option>
    			<option>2015</option>
				</select>
			</h4>
		<div class="panel panel-default">
            <div class="panel-body panel-graph">
            	<img src="http://kartenn.region-bretagne.fr/portail-idd/img/social_diplome.svg" style="width:30%;">
            	<p style="margin:-5px 0px -5px 0px!important;">
            		<span id="taux_acces_{{code_rne}}" class="number"></span><span class="number" style="font-size:30px;">%</span>
            	</p>
            	<p class="title-number">Taux d'accès brut<br><span class="sub-number"><i>de la seconde au bac</i></span></p>
            </div>
		</div>
		<div class="panel panel-default">
            <div class="panel-body panel-graph">
            	<img src="http://kartenn.region-bretagne.fr/portail-idd/img/icon-lyc.svg" style="width:30%;">
            	<p style="margin:-5px 0px -5px 0px!important;">
                    <span id="effectifs_{{code_rne}}" class="number"></span><span class="number" style="font-size:30px;"> élèves</span>
            	</p>
            	<p class="title-number">Effectifs<br><span class="sub-number"><i>de la seconde a la terminale</i></span></p>
            </div>
		</div>
		<div class="panel panel-default">
            <div class="panel-body panel-graph">
                <canvas class="chart1" id="chart1_{{code_rne}}" ></canvas>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-body panel-graph">
			    <canvas class="chart2" id="chart2_{{code_rne}}" ></canvas>
            </div>
		</div>
		<div class="panel panel-default">
            <div class="panel-body panel-graph">
			    <canvas class="chart3" id="chart3_{{code_rne}}" ></canvas>
            </div>
		</div>
		<p>* Valeur ajoutée :  Différence entre taux attendus et taux obtenus</p>
	</li>
{{/features}}

<style>
	.title-feature, .indicateur {
		color: #2d4059;
		font-family:"roboto_black";
		font-size:23px;
		margin-bottom:3%;
		line-height:1;
	}
	.indicateur {
		text-align: center;
	}
	.panel-graph {
	    color: #3db39e;
	    text-align: center;
	}
	.number {
	    font-size: 40px;
	    font-weight: 900;
	}
</style>
<script>
	var lycee_charts = {};
    var getValuesAndLabels = function (obj, scheme) {
        var data = {values: [], labels:[]};
        Object.keys(obj).forEach(function(key) {
             var position = key.indexOf(scheme);
             if (position >= 0) {
                data.values.push(obj[key]);
                data.labels.push(key.substr(position + scheme.length).toUpperCase());
            }
        });
        return data;
    };

    var reOrderValues = function (l1, l2, v2) {
        var orderedArray = [];
        l1.forEach(function (label, id) {
            //find id with same label in l2
            var i = l2.findIndex(function(element) { return element === label; });
            orderedArray.push(v2[i]);
        });
        return orderedArray;
    };

    var drawCharts = function (year) {
        var colors = {
            rgb:[
                [45, 64, 89],
                [61,179,158],
                [255,201,57],
                [161, 184, 112],
                [236,96,95],
                [153,153,153],
                [155, 89, 182],
                [52, 152, 219],
                [211, 84, 0]
            ],
            rgba1: [],
            rgba2: []
        };
        colors.rgb.forEach(function(rgb) {
            colors.rgba1.push("rgba(" + rgb.join(",") + ",1)");
            colors.rgba2.push("rgba(" + rgb.join(",") + ",0.6)");

        });

        var lycees = [];
        {{#features}}
            lycees.push('{{code_rne}}');
        {{/features}}

        lycees.forEach(function (rne, id) {
            var url = "https://data.education.gouv.fr/api/records/1.0/search/?dataset=fr-en-indicateurs-de-resultat-des-lycees-denseignement-general-et-technologique&facet=code_etablissement&facet=annee&refine.code_etablissement="+rne+"&refine.annee="+year;
            $.ajax({
                url,
                dataType: "json",
                success (data) {
                    var stats = data.records[0].fields;
                    var rne = stats.code_etablissement;
                    var va = parseInt(stats.taux_brut_de_reussite_total_series) - parseInt(stats.taux_reussite_attendu_france_total_series);
                    var tab = stats.taux_acces_brut_seconde_bac;
                    var effectifs = parseInt(stats.effectif_de_seconde) + parseInt(stats.effectif_de_premiere) + parseInt(stats.effectif_de_terminale);
                    $("#valeur_ajoutee_" + rne).text("Valeur ajoutée* : " + va);
                    $("#taux_acces_" + rne).text(tab);
                    $("#effectifs_" + rne).text(effectifs);

                    /* chart1 */
                    var chart1_prop = getValuesAndLabels(stats, "effectif_presents_serie_");
                    if (lycee_charts["chart1_" + rne]) {
                        //update chart
                        lycee_charts["chart1_" + rne].destroy();
                    }
                    //create chart
                    var ctx1 = document.getElementById("chart1_" + rne);
                    lycee_charts["chart1_" + rne] = new Chart(ctx1, {
                      type: 'doughnut',
                      data: {
                          labels: chart1_prop.labels,
                          datasets: [{
                              label: "Effectifs par filière",
                              backgroundColor: colors.rgba2,
                              borderColor: colors.rgba1,
                              data: chart1_prop.values
                          }]
                      },
                      options: {
                        responsive: true,
                        title: {
                            display: true,
                            text: 'Effectifs de terminales par filière'
                        }
                      }
                    });

                    /* chart 2 */
                    var chart2_prop1 = getValuesAndLabels(stats, "taux_brut_de_reussite_serie_");
                    var chart2_prop2 = getValuesAndLabels(stats, "taux_mention_brut_serie_");
                    chart2_prop2.values = reOrderValues(chart2_prop1.labels,chart2_prop2.labels, chart2_prop2.values);
                    if (lycee_charts["chart2_" + rne]) {
                        //update chart
                        lycee_charts["chart2_" + rne].destroy();
                    }
                    //create chart
                    var ctx2 = document.getElementById("chart2_" + rne);
                    lycee_charts["chart2_" + rne] = new Chart(ctx2, {
                        type: 'radar',
                        data: {
                            labels: chart2_prop1.labels,
                            datasets: [
                                {
                                    label: "Taux de mentions",
                                    backgroundColor: "rgba(45, 64, 89, 0)",
                                    borderColor: colors.rgba1[0],
                                    pointBackgroundColor: colors.rgba1[0],
                                    pointBorderColor: colors.rgba1[0],
                                    pointHoverBackgroundColor: "#fff",
                                    pointHoverBorderColor: colors.rgba1[0],
                                    data: chart2_prop2.values
                                },
                                {
                                    label: "Taux de réussite",
                                    backgroundColor: colors.rgba2[1],
                                    borderColor: colors.rgba1[1],
                                    pointBackgroundColor:  colors.rgba1[1],
                                    pointBorderColor:  colors.rgba1[1],
                                    pointHoverBackgroundColor: "#fff",
                                    pointHoverBorderColor:  colors.rgba1[1],
                                    data: chart2_prop1.values
                                }
                            ]
                        },
                          options: {
                            scale: {
                                ticks: {
                                    beginAtZero: true
                                }
                            },
                            responsive: true
                          }
                    });

                //chart 3
                var chart3_prop = {values:[]};
                var chart3_prop0 = getValuesAndLabels(stats, "taux_reussite_attendu_france_serie_");
                chart3_prop0.values = reOrderValues(chart2_prop1.labels,chart3_prop0.labels, chart3_prop0.values);
                chart2_prop1.values.forEach(function(val,id) {
                    chart3_prop.values.push(parseInt(val) - parseInt(chart3_prop0.values[id]));
                });
                console.log(chart2_prop1, chart3_prop0, chart3_prop);
                if (lycee_charts["chart3_" + rne]) {
                        //update chart
                        lycee_charts["chart3_" + rne].destroy();
                    }
                    //create chart
                  var ctx3 = document.getElementById("chart3_" + rne);
                  lycee_charts["chart3_" + rne] = new Chart(ctx3, {
                      type: 'radar',
                      data: {
                          labels: chart2_prop1.labels,
                          datasets: [{
                              label: "Valeur ajoutée",
                              backgroundColor:  colors.rgba2[1],
                              borderColor:  colors.rgba1[1],
                              pointBackgroundColor:  colors.rgba1[1],
                              pointBorderColor:  colors.rgba1[1],
                              pointHoverBackgroundColor: "#fff",
                              pointHoverBorderColor:  colors.rgba1[1],
                              data: chart3_prop.values
                          }
                        ]
                      },
                      options: {
                        scale: {
                            ticks: {
                                beginAtZero: true
                            }
                        },
                        responsive: true
                      }
                  });
            }}); /* end Ajax */
            }); /* end forEach */
        }; /* end */

    if  (typeof Chart === 'function') {
            drawCharts(2017);
    } else {
            $.get('lib/chartjs-3.7.1/Chart.min.js', function() {
                drawCharts(2017);

            });
    }
</script>